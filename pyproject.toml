# For uv @ https://docs.astral.sh/uv/
[project]
name = "pybooktools"
version = "0.1.1"
description = "Tools I use for writing Python books."
readme = "README.md"
requires-python = ">=3.13.0"
dependencies = [
    "cyclopts>=3.7.0",
    "hypothesis>=6.125.2",
    "icecream>=2.1.3",
    "pyperclip>=1.9.0",
    "pytest>=8.3.4",
    "rich>=13.9.4",
    "typer>=0.15.1",
]

[project.scripts]
# Display these commands
pybooktools = "pybooktools.pybooktools_reminder.reminders_from_pyproject:main"
# Add or update "Output Comment Lines" in Python examples
px = "pybooktools.update_example_output.update_example_output:app"
# Add or update sluglines in Python files
slug = "pybooktools.sluglines.slug_line:app"
# Adds sluglines to Python examples in Markdown files
mdslug = "pybooktools.sluglines.md_auto_slug:main"
# Renumber Markdown chapters & align chapter names
chapnum = "pybooktools.renumber_markdown_chapters.renumber_chapters:app"
# Run validation checks on Markdown chapters
mdvalid = "pybooktools.pymarkdown_validator.validate:app"
# Extract examples from Markdown to repo
mdextract = "pybooktools.md_extract_examples.extractor:app"
# Inject examples from repo to Markdown
mdinject = "pybooktools.inject_examples.injector:app"
# Remove chapter directories from example repository
repoclean = "pybooktools.repo_cleaner.clean_example_repo:app"
# Flatten a directory tree to give to an AI
aiflatten = "ai_flatten.flatten_dir_for_ai:main"
# Take results from an AI and turn back into a directory tree
unflatten = "ai_flatten.un_flatten:main"

[tool.uv]
package = true

[tool.uv.pip]
generate-hashes = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/pybooktools"]

[tool.pytest.ini_options]
pythonpath = ["src/pybooktools"]
